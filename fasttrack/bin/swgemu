#!/bin/bash

main() {
    case $1 in
	'start' ) server_start ;;
	'status' ) server_status ;;
    esac
}

ICON=/home/vagrant/ZonamaDev/fasttrack/assets/swgemu_icon.png

server_start() {
    if server_status; then
	echo "** Already running **"
	exec screen -D -RR
	exit 1
    fi

    server_update_ip

    cd ~/workspace/Core3/MMOCoreORB/bin

    if [ ! -x core3 ]; then
	echo "** Server not built? **"
	exit 2
    fi

    for i in 5 4 3 2 1
    do
	let "j=$i-1"
	mv o_screenlog.${j}.gz o_screenlog.${i}.gz 2> /dev/null
    done

    mv screenlog.0 o_screenlog.0

    gzip -f o_screenlog.0 &

    exec screen -L ./core3
}

server_status() {
    local pid=$(pgrep core3)

    if [ -z "$pid" ]; then
	echo "Server is not running"
	return 1
    fi

    local uptime=$(ps -p $pid -ho etime)

    echo "Server running on $pid, uptime: $uptime"

    return 0
}

server_update_ip() {
    local server_ip='127.0.0.1'
    local i2=$(netstat -ni|grep eth2)

    # If they have an eth2 they might have enabled the "public" interface
    if [ -n "$i2" ]; then
	# Find the default route
	read -a aa <<<$(ip -o route show|egrep '^default')
	# What's the address of the interface with default route?
	read -a aa <<<$(ip -o -4 addr show ${aa[4]})
	# Let's suggest that ip
	server_ip=$(echo ${aa[3]}|cut -d/ -f1)
    fi

    echo "Suggested IP: $server_ip"

    mysql swgemu -ve "UPDATE galaxy SET ip = '${server_ip}'";
    sed -e "/server_ip/s/server_ip = '[^']*'/server_ip = '"${server_ip}"'/" -i /home/vagrant/server/emuyoda/yoda-config.lua
}

main $@

exit 0

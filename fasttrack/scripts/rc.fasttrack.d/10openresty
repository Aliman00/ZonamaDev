#!/bin/bash
#
tm_start=$SECONDS
# Allow userland openresty on port OPENRESTY_PORT to act like it's on 80
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port ${OPENRESTY_PORT}
iptables -t nat -I OUTPUT -p tcp -d 127.0.0.1 --dport 80 -j REDIRECT --to-port ${OPENRESTY_PORT}
# Update nginx.conf
cnf="${OPENRESTY_DIR}/nginx/conf/nginx.conf"
perl -pe 's/listen(\s+)\d+/listen${1}'${OPENRESTY_PORT}'/ if(m!^\s+listen\s+\d+;!)' -i ${cnf}
if ! fgrep "add_header Cache-Control no-cache" ${cnf}; then
    sed -e '/add_header Cache-Control/d' -e '/lua_package_cpath/a\    add_header Cache-Control no-cache;' -i ${cnf}
    rm -fr "${ZDHOME}/.cache/google-chrome" "${ZDHOME}/.cache/mozilla"
    msg "Cleared browser caches and updated nginx.conf with Cache-Control: no-cache"
fi
# Start nginx as user, this is slow due to a bug in systemd and has to wait for a 25 second retry for the su session
if [ -x $OPENRESTY_DIR/nginx/sbin/nginx ]; then
    su ${ZDUSER} -c "$OPENRESTY_DIR/nginx/sbin/nginx -s stop;sleep 2;$OPENRESTY_DIR/nginx/sbin/nginx" &
fi
delta=999
let "delta=$SECONDS - $tm_start"
step_complete 0 "delta=$delta"
